services:
  app:
    image: app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${APP_PORT}:${APP_PORT}
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - myNetwork

  db:
    image: postgres:15-alpine
    container_name: game-platform-postgres
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 1s
      timeout: 1s
      retries: 60
    restart: always
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    networks:
      - myNetwork

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis_volume:/data
    networks:
      - myNetwork

  minio:
    image: minio/minio:latest
    container_name: minio
    env_file:
      - .env
    restart: always
    volumes:
      - ~/minio/certs:/root/.minio/certs  # Mounting the certs directory
      - minio-storage:/data
      - minio-config:/root/.minio
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}" --address=":${MINIO_STORAGE_PORT}"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "${MINIO_STORAGE_PORT}:${MINIO_STORAGE_PORT}"
      - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}"

volumes:
  postgres_volume:
  redis_volume:
  minio-storage:
  minio-config:

networks:
  myNetwork:
    driver: bridge
