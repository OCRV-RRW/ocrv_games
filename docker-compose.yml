services:
  app:
    image: app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${APP_PORT}:${APP_PORT}
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - myNetwork

  db:
    image: postgres:15-alpine
    container_name: game-platform-postgres
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 1s
      timeout: 1s
      retries: 60
    restart: always
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    networks:
      - myNetwork
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis_volume:/data
    networks:
      - myNetwork

volumes:
  postgres_volume:
  redis_volume:

networks:
  myNetwork:
    driver: bridge
